{{- if .Values.prometheus.enabled -}}
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: vessl-prometheus
  labels:
    app: prometheus
spec:
  {{- with .Values.prometheus.nodeSelector }}
  nodeSelector:
{{ toYaml . | indent 4}}
  {{- end }}
  {{- with .Values.prometheus.tolerations }}
  tolerations:
{{ toYaml . | indent 4}}
  {{- end }}
  alerting:
    alertmanagers:
      []
  image: "quay.io/prometheus/prometheus:v2.41.0"
  version: v2.41.0
  externalUrl: ""
  paused: false
  replicas: 1
  shards: 1
  logLevel:  info
  logFormat:  logfmt
  listenLocal: false
  enableAdminAPI: false
  retention: "10d"
  routePrefix: "/"
  remoteWrite:
    - name: vessl-remote-write
      url: {{ .Values.prometheus.remoteWriteURL }}
      authorization:
        type: Token
        credentials:
          name: vessl-agent
          key: access-token
      writeRelabelConfigs:
        - action: labeldrop
          regex: feature_node_kubernetes_io_(.+)
        - action: labeldrop
          regex: label_feature_node_kubernetes_io_(.+)
        - action: labeldrop
          regex: minikube_(.+)
  serviceAccountName: vessl-prometheus
  serviceMonitorSelector:
    matchLabels:
      prometheus: "vessl-prometheus"

  serviceMonitorNamespaceSelector: {}
  podMonitorSelector:
    matchLabels:
      prometheus: "vessl-prometheus"

  podMonitorNamespaceSelector: {}
  probeSelector:
    matchLabels:
      prometheus: "vessl-prometheus"
  
  additionalScrapeConfigs:
    name: vessl-prometheus-scrape-config
    key: additional-scrape-config.yaml

  probeNamespaceSelector: {}
  securityContext:
    fsGroup: 2000
    runAsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  ruleNamespaceSelector: {}
  ruleSelector:
    matchLabels:
      release: "vessl"

  portName: http-web
{{- end -}}